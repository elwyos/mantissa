//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
#include schdangler lmdb.lmap signol sqlite.perm shing.phonenumber
//////////////////////////////////////////////////////////////////////////////////////////
#include items
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
namespace Mantissa
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
// ---------------------------------------------------------------------------------------
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
\perms "mantissa.sqlite"
   string client_key
   string client_secret
   
      
   string command_hq_name
      // will be used for topleft, defaults to shadow mantissa if it doesn't exist
      
   string demomode_phonenum
   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
class Manti

   // -------------------------------------------------------------------------
   string command_center_name
   string demo_phone_number
   
   SDate last_succ_messsage_check = SDate(0)
   SDate last_message_receive = SDate(0)
   
   // -------------------------------------------------------------------------
   string oauth_token
   SDate oauth_token_expiry
   Xnl has_oauth_token_xnl
   
   Xnl has_oauth_error_xnl
   string last_oauth_error
   SDate oauth_error_date = SDate(0)
   
   int auth_token_tries_count
   
   
   // requesting phone numbers, etc
   int phone_number_tries_count
   Xnl has_provisional_number_xnl
   string provisional_number
   
   // -------------------------------------------------------------------------
   // || settings panel ||
   
   string key_input_textfield
   string secret_input_textfield
   
   // -------------------------------------------------------------------------
   // || contacts import panel ||
   
   int contacts_textbox_focus
   string contacts_import_buildup
   
   // -------------------------------------------------------------------------
   // || broadcast popup ||
   
   int broadcast_textbox_focus
   string broadcast_message_buildup
   mESSAGE currently_popping_message
   
   bool broadcast_everybody
   bool broadcast_selected_only
   vOLUNTEER broadcast_targetuser
   
   // -------------------------------------------------------------------------
   // || contacts popup ||
   vOLUNTEER currently_popping_vol
   
   // -------------------------------------------------------------------------
   // || new/edit task popup ||
   int task_description_focus
   string task_description
   
   string task_notes
   
   tASK currently_edited_task
   
   
   // -------------------------------------------------------------------------
   // || messages panel ||
   string message_filter
   string last_applied_message_filter
   
   vector<Message*> sorted_messages
   bool message_synced = false
   
   // -------------------------------------------------------------------------
   // || tasks panel ||
   string tasks_filter
   string last_applied_tasks_filter
   
   vector<Task*> sorted_tasks
   bool tasks_synced
   
   // -------------------------------------------------------------------------
   // || volunteers panel ||
   string volunteer_filter
   string last_applied_vol_filter
   
   vector<Volunteer*> sorted_volunteers
   bool volunteers_synced
   
   
   vector<Volunteer*> selected_volunteers
   bool selected_vols_synced
   
   vOLUNTEER want_message_vol
   
   // -------------------------------------------------------------------------
   // || raw messages panel ||
   deque<RawMessage> raw_messages
   
   
   // -------------------------------------------------------------------------

   /\/ uNSORTED /\/

      update();
      drawPost2D();
      handleTouchEvent(const TouchInfo& tinfoil) -> bool;
      setupKeys();
      Manti();
      setupImlets();
      findTags(const string& thetext) -> vector<Tag*>;
      syncMessages();
      searchPredPart(const string& thetext) -> SearchPredPart;
      searchPred(const string& thetext) -> SearchPred;
      syncContacts();
      openSettings();
      // openBroadcastMenu();
      // openImportMenu();
      openHelp();
      unsyncOauth();
      syncTasks();
      openNewTaskDialogue();
      // createNewTask(const string& thedesc) -> Task&;
      createNewTask(const string& thedesc, const string& thenotes) -> Task&;
      openTaskEdit(const string& taskname);
      openContactsImportMenu();
      importContacts(const string& masstext);
      createContact(const string& firstname, const string& fullname, Shing::PhoneNumber lenum, const string& lenotes);
      // openVolunteerEdit(const string& volname);
      messagesPaneImcode();
      tasksPaneImcode();
      volunteersPaneImcode();
      openRawMessagesList();
      receiveMessageRaw(const string& theid, const string& themessage, const string& sender);
      createNewMessageObject() -> Message&;
      onReceiveMessage(RawMessage& rm);
      openMessageContextMenu(const string& lemessageid);
      rebroadcast(Message& lemessage);
      deleteMessage(Message& lemessage);
      openVolunteerPopup(const string& volname);
      syncContactSel();
      assignSelectedVolunteersTo(Task& letask);
      openBroadcastMenu(bool foreverybody, bool forselected, vOLUNTEER letarg);
      performBroadcast();
      performMessageSending(const string& target_number, const string& messagebui);
      clearTaskAssignment(Task& letask);

   
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
DECLschdangler(manti, Manti);
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
